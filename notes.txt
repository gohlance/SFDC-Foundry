1. Need to retest the background task to pull Data, seems like apex section is not pull!


3. records created for particular record type -> select count() from account 
    - Have to be objects level

    async function testing_recordsquery(){
   // let result =  conn.query("select count() from account where recordtype = 'Account'")
    conn.query("SELECT count() FROM Account where recordtypeid = '012460000011jC3AAI'", function(err, result) {
        if (err) { return console.error(err); }
        console.log("total : " + result.totalSize);
        console.log("fetched : " + result.records.length);
      });
    //console.log(result);
}

For point 3, need background svc for this.

6. Sharing Settings
- This is how they can debug.


- DONE
5. Org type - find org type
https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/dome_limits.htm

6. Apex Pages 
- When it was last modified

SELECT Name, LastModifiedDate FROM ApexTrigger order by Lastmodifieddate desc

SELECT Name, LastModifiedDate FROM ApexClass order by Lastmodifieddate desc

async function testing_getApexPageByLastModified(){
    conn.query("SELECT Name, LastModifiedDate FROM ApexPage order by Lastmodifieddate desc", function (err, result){
        if (err) { return console.error(err); }
        console.log(result);
        console.log("fetched : " + result.records.length);
    });
}





My solution was to use metadata files for profiles.

Get access to Salesforce metadata. You can do this using the metadata API directly, or indirectly through pulling metadata files via an IDE like Eclipse or MavensMate

Get metadata for profiles and for layouts. The layouts metadata provides you a full list of page layouts across all objects, while the profile files contain the info on which page layout/record type combos the profile is associated with.

Compare the profiles' assignments to page layouts to the list of page layouts. I did this using some scripting code which parsed through the xml files.



 
    Need to create storedprocedure for this
This will get all the relationship between profiles and layout
select distinct 
elem -> 'LayoutId' as LayoutID, 
elem -> 'ProfileId' as profile, 
elem2 -> 'Name' as ProfileName,
elem -> 'TableEnumOrId' as idontknow,
elem -> 'RecordTypeId' as Recordtype
from public.profileslayouts, 
lateral jsonb_array_elements(profileslayout -> 'records') elem,
public.profiles,
lateral jsonb_array_elements(profile -> 'records') elem2
where replace(cast(elem-> 'ProfileId' as text),'"','') =
replace(substring(cast(elem2 -> 'attributes'-> 'url' as text) from '([^\/]*$)'), '"','')
order by elem2 -> 'Name'


 Error : INVALID_FIELD: 
2020-01-29T14:15:34.011369+00:00 app[web.1]: LicenseDefinitionKey, MasterLabel, MonthlyLoginsEntitlement, MonthlyLoginsUsed
2020-01-29T14:15:34.011372+00:00 app[web.1]:                                    ^
2020-01-29T14:15:34.011377+00:00 app[web.1]: ERROR at Row:1:Column:43
2020-01-29T14:15:34.011380+00:00 app[web.1]: No such column 'MonthlyLoginsEntitlement' on entity 'UserLicense'. If you are attempting to use a custom field, be sure to append the '__c' after the custom field name. Please reference your WSDL or the describe call for the appropriate names.
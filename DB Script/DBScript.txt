psql -h localhost -p 5432 -U my_user -d my_database -f INSTALL_PGMEMENTO.sql

psql -h localhost -p 5432 -U my_user -d my_database -f INIT.sql


-- Drop table

DROP TABLE public.metas;

CREATE TABLE public.metas (
	id serial NOT NULL,
	orgid text NULL,
	meta jsonb NULL,
	CONSTRAINT metas_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.apextriggers;

CREATE TABLE public.apextriggers (
	id serial NOT NULL,
	orgid text NULL,
	apextrigger jsonb NULL,
	CONSTRAINT apextriggers_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.sobjectdesribe;

CREATE TABLE public.sobjectdesribe (
	id serial NOT NULL,
	orgid text NULL,
	sobjectdesribe jsonb NULL,
	CONSTRAINT sobjectdesribe_pkey PRIMARY KEY (id)
);


-- Drop table

DROP TABLE public.apexpages;

CREATE TABLE public.apexpages (
	id serial NOT NULL,
	orgid text NULL,
	apexpage jsonb NULL,
	CONSTRAINT apexpages_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.apexclass;

CREATE TABLE public.apexclass (
	id serial NOT NULL,
	orgid text NULL,
	apexclass jsonb NULL,
	CONSTRAINT apexclass_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.apexcomponents;

CREATE TABLE public.apexcomponents (
	id serial NOT NULL,
	orgid text NULL,
	apexcomponent jsonb NULL,
	CONSTRAINT apexcomponents_pkey PRIMARY KEY (id)
);


-- Drop table

DROP TABLE public.profileslayouts;

CREATE TABLE public.profileslayouts (
	id serial NOT NULL,
	orgid text NULL,
	profileslayout jsonb NULL,
	CONSTRAINT profileslayouts_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.profiles;

CREATE TABLE public.profiles (
	id serial NOT NULL,
	orgid text NULL,
	profile jsonb NULL,
	CONSTRAINT profiles_pkey PRIMARY KEY (id)
);


-- Drop table

DROP TABLE public.layouts;

CREATE TABLE public.layouts (
	id serial NOT NULL,
	orgid text NULL,
	layout jsonb NULL,
	CONSTRAINT layouts_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.objects;

CREATE TABLE public.objects (
	id serial NOT NULL,
	orgid text NULL,
	objectinfo jsonb NULL,
	CONSTRAINT objects_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.customApps;

CREATE TABLE public.customApps (
	id serial NOT NULL,
	orgid text NULL,
	customApp jsonb NULL,
	CONSTRAINT customApps_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.businessprocess;

CREATE TABLE public.businessprocess (
	id serial NOT NULL,
	orgid text NULL,
	businessprocess jsonb NULL,
	CONSTRAINT businessprocess_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.workflowrules;

CREATE TABLE public.workflowrules (
	id serial NOT NULL,
	orgid text NULL,
	workflowrule jsonb NULL,
	CONSTRAINT workflowrules_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.validationrules;

CREATE TABLE public.validationrules (
	id serial NOT NULL,
	orgid text NULL,
	validationrule jsonb NULL,
	CONSTRAINT validationrules_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.recordtypes;

CREATE TABLE public.recordtypes (
	id serial NOT NULL,
	orgid text NULL,
	recordtype jsonb NULL,
	CONSTRAINT recordtypes_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.license;

CREATE TABLE public.license (
	id serial NOT NULL,
	orgid text NULL,
	license jsonb NULL,
	CONSTRAINT license_pkey PRIMARY KEY (id)
);

-- Drop table

DROP TABLE public.orglimits;

CREATE TABLE public.orglimits (
	id serial NOT NULL,
	orgid text NULL,
	orglimit jsonb NULL,
	CONSTRAINT orglimits_pkey PRIMARY KEY (id)
);


-- FUNCTIONS -- 

CREATE OR REPLACE FUNCTION public.profilesid_function(orgid text)
 RETURNS TABLE(profileid text)
 LANGUAGE sql
AS $function$
   select replace(substring(cast(elem -> 'attributes'-> 'url' as text) from '([^\/]*$)'), '"','')
from public.profiles, lateral jsonb_array_elements(profile -> 'records') elem where orgid = $1;
$function$
;

//Need to create storedprocedure for this
//This will get all the relationship between profiles and layout
select distinct 
elem -> 'LayoutId' as LayoutID, 
elem -> 'ProfileId' as profile, 
elem2 -> 'Name' as ProfileName,
elem -> 'TableEnumOrId' as idontknow,
elem -> 'RecordTypeId' as Recordtype
from public.profileslayouts, 
lateral jsonb_array_elements(profileslayout -> 'records') elem,
public.profiles,
lateral jsonb_array_elements(profile -> 'records') elem2
where replace(cast(elem-> 'ProfileId' as text),'"','') =
replace(substring(cast(elem2 -> 'attributes'-> 'url' as text) from '([^\/]*$)'), '"','')
order by elem2 -> 'Name'